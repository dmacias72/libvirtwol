<?xml version='1.0' standalone='yes'?>

<!DOCTYPE PLUGIN [
<!ENTITY name      "libvirtwol">
<!ENTITY author    "dmacias72">
<!ENTITY version   "2018.10.28">
<!ENTITY launch    "Settings/VMSettings">
<!ENTITY gitURL    "https://raw.githubusercontent.com/&author;/unRAID-libvirtwol/master">
<!ENTITY pluginURL "&gitURL;/plugin/&name;.plg">
<!ENTITY pkgURL    "&gitURL;/packages">
<!ENTITY plgPATH   "/boot/config/plugins/&name;">
<!ENTITY plgNAME   "&name;-&version;-x86_64-1">
<!ENTITY emhttp    "/usr/local/emhttp/plugins/&name;">
]>

<PLUGIN name="&name;" author="&author;" launch="&launch;" version="&version;" pluginURL="&pluginURL;">

<!--
This Plugin installs libvirt wake on lan for unRaid 6.1  All dependencies are installed as needed and is controlable from the webgui.
-->

<CHANGES>
##&name;
###2018.10.28
- update libvirt-python to 4.7 for 6.6
- remove support link from readme
###2018.01.13
- require NerdPack for Python 2 install
- add notification for missing python
###2017.11.28a
- update libvirt-python to 3.8 for 6.4
- update python to 2.7.14a for 6.4
- add work around to plugin install services
###2017.11.28
- move to separate repo
###2017.04.11
- update python for 6.2, 6.3 and 6.4
###2017.01.30a
- harden code for XSS and CSRF vulnerabilities
- fix form not defined and submitting
- update libvirt-python to 2.5.0 for 6.3
- update python to 2.7.13
- add support link to readme
###2016.11.05
- fix: continue script on exception e.g. error in vm xml
###2016.10.22
- fix: min and max
###2016.10.15
- add: min and max versions
###2016.10.09
- update for 6.3
###2016.09.16
- update python to 2.7.12
###2016.06.04
- add rc script
- amend dynamix plugin api
###2016.04.16
- add help button comments
- add dynamix plugin API
- add white-space: normal to fix status css formatting
###2016.03.23
- remove libpcap
###2016.03.19
- add wake on lan to advanced view
###2016.03.14
- update package locations
###2016.03.12
- add dual package support for 6.1 and 6.2+
- add python 2.7.11 for 6.2+
- add libvirt python 1.3.1 for 6.2+
- move settings to php file and include in vm settings
- move all permissions on scripts to plugin package install
###2016.01.22
- update install and remove scripts
- check if config exists
- create a default config file
###2016.01.02
- fix not starting with array
###2015.12.21a
- fix config file and start/stop
- add unRAID version check
- add md5 package ckeck
- convert install and remove scripts
###2015.12.01
- added fix for other packet sizes
###2015.11.18
- update python to 2.7.9
###2015.11.17
- fix start and stop event permissions
###2015.11.16
- added promiscuous mode to listen for all packets
- will recieve all ether proto 0x0842 packets now
###2015.11.15
- added support for ethertype 0x0842
- tested with ether-wake but asus router still not waking
###2015.11.14c
- fix plugin page image and link
- pkg variable typo
###2015.11.14
- initial commit
</CHANGES>

<FILE Name="&plgPATH;/libvirt-python-4.7.0-x86_64-1ponce.txz" Min="6.6" Run="upgradepkg --install-new">
<URL>&pkgURL;/libvirt-python-4.7.0-x86_64-1ponce.txz</URL>
<MD5>9913842a405fe86639dd23032a3c1884</MD5>
</FILE>

<FILE Name="&plgPATH;/libvirt-python-4.5.0-x86_64-1ponce.txz" Min="6.5" Max="6.5.99" Run="upgradepkg --install-new">
<URL>&pkgURL;/libvirt-python-4.5.0-x86_64-1ponce.txz</URL>
<MD5>3f853e84eb9ebcb9ffcfcac33c2c8c64</MD5>
</FILE>

<FILE Name="&plgPATH;/libvirt-python-3.8.0-x86_64-1ponce.txz" Min="6.4" Max="6.4.99" Run="upgradepkg --install-new">
<URL>&pkgURL;/libvirt-python-3.8.0-x86_64-1ponce.txz</URL>
<MD5>b6e4e01d594c43cd580bf877d337a92f</MD5>
</FILE>

<FILE Name="&plgPATH;/libvirt-python-2.5.0-x86_64-1ponce.txz" Min="6.3" Max="6.3.99" Run="upgradepkg --install-new">
<URL>&pkgURL;/libvirt-python-2.5.0-x86_64-1ponce.txz</URL>
<MD5>f8e0ec66914344f0894ff45f7d8561f5</MD5>
</FILE>

<FILE Name="&plgPATH;/libvirt-python-1.3.1-x86_64-1ponce.txz" Min="6.2" Max="6.2.99" Run="upgradepkg --install-new">
<URL>&pkgURL;/libvirt-python-1.3.1-x86_64-1ponce.txz</URL>
<MD5>9a64e4941dd9c7fa3b9c8bf244c9a2d3</MD5>
</FILE>

<FILE Name="&plgPATH;/libvirt-python-1.2.18-x86_64-1ponce.txz" Min="6.1" Max="6.1.99" Run="upgradepkg --install-new">
<URL>&pkgURL;/libvirt-python-1.2.18-x86_64-1ponce.txz</URL>
<MD5>4198c7784a57d7ff80fb1d53811ceb5e</MD5>
</FILE>

<FILE Name="&plgPATH;/pylibpcap-0.6.2-x86_64-1_slack.txz" Min="6.1" Run="upgradepkg --install-new">
<URL>&pkgURL;/pylibpcap-0.6.2-x86_64-1_slack.txz</URL>
<MD5>2531f44126b3c05d76782c9eedba9988</MD5>
</FILE>

<FILE Name="/boot/config/domain.cfg">
<INLINE>
<![CDATA[
WOL="disable"
]]>
</INLINE>
</FILE>

<!--
The 'plugin' package file.
-->
<FILE Name="&plgPATH;/&plgNAME;.txz">
<URL>&gitURL;/archive/&plgNAME;.txz</URL>
</FILE>

<!--
The 'plugin' package MD5 hash.
-->
<FILE Name="&plgPATH;/&plgNAME;.md5">
<URL>&gitURL;/archive/&plgNAME;.md5</URL>
</FILE>

<!-- WORKAROUND -->
<FILE Name="/tmp/start_&name;" Mode="0770">
<INLINE>
#!/bin/bash
CONFIG=/boot/config/domain.cfg

# read our configuration
if [ -e "$CONFIG" ]; then
    source "$CONFIG"
fi

# stopping service
/etc/rc.d/rc.&name; stop
sleep 1

# start service if enabled
if [ "$WOL" == "enable" ]; then
    # starting service
    /etc/rc.d/rc.&name; start
    sleep 1
fi

</INLINE>
</FILE>

<!--
The 'install' script.
-->
<FILE Run="/bin/bash">
<INLINE>
#Verify unRAID Version
source /etc/unraid-version
VER=${version:0:3}

if [[ $VER == 6.0 ]]; then
  echo "unRAID version 6.1 or higher is required"
  exit 1
fi

# Verify and install plugin package
sum1=$(/usr/bin/md5sum &plgPATH;/&plgNAME;.txz)
sum2=$(/usr/bin/cat &plgPATH;/&plgNAME;.md5)
if [ "${sum1:0:32}" != "${sum2:0:32}" ]; then
  echo "Wrong 'plugin' package md5 hash."
  rm &plgPATH;/&plgNAME;.txz
  rm &plgPATH;/&plgNAME;.md5
  exit 1
else
    if [[ $VER == 6.2 ]]; then
        # restore VM Manager Menu
        sed -i -- 's/VMManager:1/OtherSettings/g' /usr/local/emhttp/plugins/dynamix.vm.manager/VMSettings.page
    fi

    if [[ $VER == 6.3 ]]; then
        # restore VM Manager Menu
        sed -i -- 's/VMManager:1/OtherSettings/g' /usr/local/emhttp/plugins/dynamix.vm.manager/VMSettings.page
    fi

    upgradepkg --install-new &plgPATH;/&plgNAME;.txz

    # Start scripts if enabled
    echo "starting ipmi services..."
    at -M -f /tmp/start_&name; now 2>/dev/null

    sleep 1

    rm -f /tmp/start_&name;

    # Cleaning old source files
    find &plgPATH;/ -type f -iname "&name;*.txz" ! -iname "*&version;*" -delete
    find &plgPATH;/ -type f -iname "&name;*.md5" ! -iname "*&version;*" -delete

echo ""
echo "--------------------------------------------------------------------------------------"
echo " &name; has been installed."
echo " This plugin requires NerdPack's Python 2 to operate"
echo " http://raw.githubusercontent.com/dmacias72/unRAID-NerdPack/master/plugin/NerdPack.plg"
echo " Copyright 2016-2018, &author;"
echo " Version: &version;"
echo "--------------------------------------------------------------------------------------"
echo ""

fi
</INLINE>
</FILE>

<!--
The 'remove' script.
-->
<FILE Run="/bin/bash" Method="remove">
<INLINE>
&emhttp;/scripts/stop
removepkg &plgPATH;/*.txz
rm -rf &emhttp;
rm -f &plgPATH;/*.txz \
  &plgPATH;/*.md5

# restore VM Manager Menu
#sed -i -- 's/VMManager:1/OtherSettings/g' /usr/local/emhttp/plugins/dynamix.vm.manager/VMSettings.page

echo ""
echo "-----------------------------------------------------------"
echo " &name; has been removed."
echo " Copyright 2016-2018, &author;"
echo " Version: &version;"
echo "-----------------------------------------------------------"
echo ""
</INLINE>
</FILE>

</PLUGIN>